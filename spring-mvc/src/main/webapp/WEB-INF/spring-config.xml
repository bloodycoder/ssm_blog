<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- 开启注解配置，使我们可以使用类似 @Controller 这样的注解。
         不然我们需要自己手工配置bean，自己逐一把每一个类写入配置文件，
         那是噩梦，就不要尝试了。
     -->
    <mvc:annotation-driven />

    <!-- 自动扫描包的范围，spring会在这个package下面扫描带有注解的类，
         把它自动注入（就是 Spring 框架帮你 new 一个类存了起来）容器。
     -->
    <context:component-scan
            base-package="com.shiyanlou" />

    <!-- 如果不配置此项，所有请求都会经过 DispatcherServlet 包括静态资源。
         这样会导致静态资源找不到对应的处理器导致错误。所以我们添加下面的配置，
         这样静态资源会使用 web 默认的 servlet 处理，不会通过 Spring 的
         DispatcherServlet。
    -->
    <mvc:default-servlet-handler />

    <!-- 添加对 jsp 页面的支持 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/blog?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="12345678"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>